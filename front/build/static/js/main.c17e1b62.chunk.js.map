{"version":3,"sources":["components/TestAPI.js","components/Users.js","components/GroceryList.js","components/Ingredients.js","components/FoodGroups.js","components/UserSelector.js","components/UserIngredients.js","components/groceryListIngredient.js","App.js","reportWebVitals.js","index.js"],"names":["TestAPI","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Users","useState","data","setData","useEffect","fetch","then","res","json","Container","maxWidth","title","columns","field","hidden","icons","editable","onRowUpdate","newData","oldData","Promise","resolve","dataUpdate","tableData","id","handleRowUpdate","onRowAdd","dataToAdd","push","handleRowAdd","onRowDelete","dataDelete","index","splice","handleRowDelete","GroceryList","type","Ingredients","name","food_group","lookup","Vegetable","Dairy","FoodGroups","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","user","setUser","FormControl","className","InputLabel","Select","labelId","value","onChange","event","target","MenuItem","UserIngredients","Carrots","Cilantro","Milk","GroceryListIngredient","username","date","GroceryListData","Grid","container","item","xs","john_doe","jane_doe","actions","icon","onClick","rowData","TabPanel","children","other","role","Box","p","Typography","a11yProps","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","setValue","AppBar","position","Tabs","newValue","Tab","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c17e1b62.chunk.js","sourcesContent":["// Source for this AJAX code: https://reactjs.org/docs/faq-ajax.html\nimport { useState, useEffect } from 'react'\n\nfunction TestAPI() {\n  const [error, setError] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  // This doesn't have to be called 'item'\n  const [item, setItem] = useState([])\n\n  // Callback function for button click, updates the state, clearing item\n  const goodbyeWorld = () => {\n    setItem(\"\")\n  }\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api\")\n    // fetch(\"http://192.168.0.4:5000/api\")\n    // fetch('https://quiet-brook-53041.herokuapp.com/api')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true)\n          setItem(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true)\n          setError(error)\n        }\n      )\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>\n  } else if (!isLoaded) {\n    return <div>Loading...</div>\n  } else {\n    return (\n      <div>\n        Response from backend: {item.hello}\n        <div>\n          <button onClick={goodbyeWorld}>Goodbye World!</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TestAPI\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\nimport React, { useEffect } from 'react'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function Users() {\n\n    var columns = [\n        { title: 'id', field: 'id', hidden: true },\n        { title: 'Email', field: 'email' },\n        { title: 'Username', field: 'username' },\n    ]\n\n    const [data, setData] = useState([])\n\n    /*fetch users on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('http://0.0.0.0:5000/users')\n            .then(res => res.json())\n            .then(res =>\n                setData([...res])\n            )\n    }, [])\n\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Users'\n                    columns={columns}\n                    data={data}\n                    icons={tableIcons}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                            handleRowUpdate(newData, oldData, resolve)\n                        }),\n                        onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                            handleRowAdd(newData, resolve)\n                        }),\n                        onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            handleRowDelete(oldData, resolve)\n                        }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function GroceryList() {\n    var columns = [\n        { title: 'id', field: 'listID', hidden: true },\n        { title: 'Username', field: 'username'},\n        { title: 'Date', field: 'listDate', type: 'date'},\n    ]\n\n    const [data, setData] = useState([])\n\n\n    /*fetch grocery_lists on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('http://0.0.0.0:5000/grocery_lists')\n            .then(res => res.json())\n            .then(res =>\n                setData([...res])\n            )\n    },[])\n\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Grocery Lists'\n                    columns={columns}\n                    data={data}\n                    icons={tableIcons}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                            handleRowUpdate(newData, oldData, resolve)\n                        }),\n                        onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                            handleRowAdd(newData, resolve)\n                        }),\n                        onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            handleRowDelete(oldData, resolve)\n                        }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function Ingredients() {\n  var columns = [\n    { title: 'id', field: 'id', hidden: true },\n    { title: 'Ingredient', field: 'name' },\n    {\n      title: 'Food Group',\n      field: 'food_group',\n      lookup: { Vegetable: 'Vegetable', Dairy: 'Dairy' },\n    },\n  ]\n\n  const [data, setData] = useState([\n    { id: 1, name: 'Carrots', food_group: 'Vegetable' },\n    { id: 2, name: 'Cilantro', food_group: 'Vegetable' },\n    { id: 3, name: 'Milk', food_group: 'Dairy' },\n  ])\n\n  const handleRowAdd = (newData, resolve) => {\n    let dataToAdd = [...data]\n    dataToAdd.push(newData)\n    setData(dataToAdd)\n    resolve()\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    const dataUpdate = [...data]\n    const index = oldData.tableData.id\n    dataUpdate[index] = newData\n    setData([...dataUpdate])\n    resolve()\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    const dataDelete = [...data]\n    const index = oldData.tableData.id\n    dataDelete.splice(index, 1)\n    setData([...dataDelete])\n    resolve()\n  }\n\n  return (\n    <div>\n      <Container maxWidth='sm'>\n        <MaterialTable\n          title='Ingredients'\n          columns={columns}\n          data={data}\n          icons={tableIcons}\n          editable={{\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                handleRowUpdate(newData, oldData, resolve)\n              }),\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                handleRowAdd(newData, resolve)\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                handleRowDelete(oldData, resolve)\n              }),\n          }}\n        />\n      </Container>\n    </div>\n  )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function FoodGroups() {\n  var columns = [\n    { title: 'id', field: 'id', hidden: true },\n    { title: 'Food Group', field: 'name' },\n  ]\n\n  const [data, setData] = useState([\n    { id: 1, name: 'Vegetable' },\n    { id: 2, name: 'Dairy' },\n  ])\n\n  const handleRowAdd = (newData, resolve) => {\n    let dataToAdd = [...data]\n    dataToAdd.push(newData)\n    setData(dataToAdd)\n    resolve()\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    const dataUpdate = [...data]\n    const index = oldData.tableData.id\n    dataUpdate[index] = newData\n    setData([...dataUpdate])\n    resolve()\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    const dataDelete = [...data]\n    const index = oldData.tableData.id\n    dataDelete.splice(index, 1)\n    setData([...dataDelete])\n    resolve()\n  }\n\n  return (\n    <div>\n      <Container maxWidth='sm'>\n        <MaterialTable\n          title='Food Groups'\n          columns={columns}\n          data={data}\n          icons={tableIcons}\n          editable={{\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                handleRowUpdate(newData, oldData, resolve)\n              }),\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                handleRowAdd(newData, resolve)\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                handleRowDelete(oldData, resolve)\n              }),\n          }}\n        />\n      </Container>\n    </div>\n  )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function SimpleSelect() {\n    const classes = useStyles();\n    const [user, setUser] = React.useState('No User Selected');\n\n    const handleChange = (event) => {\n        setUser(event.target.value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Select User</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={user}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={1}>john_doe</MenuItem>\n                    <MenuItem value={2}>jane_doe</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport UserSelector from './UserSelector'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function UserIngredients() {\n  var columns = [\n    { title: 'id', field: 'id', hidden: true },\n    {\n      title: 'Ingredient',\n      field: 'name',\n      lookup: { Carrots: 'Carrots', Cilantro: 'Cilantro', Milk: 'Milk' },\n    },\n  ]\n\n  const [data, setData] = useState([\n    { id: 1, name: 'Milk' },\n  ])\n\n  const handleRowAdd = (newData, resolve) => {\n    let dataToAdd = [...data]\n    dataToAdd.push(newData)\n    setData(dataToAdd)\n    resolve()\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    const dataUpdate = [...data]\n    const index = oldData.tableData.id\n    dataUpdate[index] = newData\n    setData([...dataUpdate])\n    resolve()\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    const dataDelete = [...data]\n    const index = oldData.tableData.id\n    dataDelete.splice(index, 1)\n    setData([...dataDelete])\n    resolve()\n  }\n\n  return (\n    <div>\n      <Container maxWidth='sm'>\n        <UserSelector/>\n        <br></br>\n        <MaterialTable\n          title='User Ingredients'\n          columns={columns}\n          data={data}\n          icons={tableIcons}\n          editable={{\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                handleRowUpdate(newData, oldData, resolve)\n              }),\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                handleRowAdd(newData, resolve)\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                handleRowDelete(oldData, resolve)\n              }),\n          }}\n        />\n      </Container>\n    </div>\n  )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function GroceryListIngredient() {\n  var GroceryListColumns = [\n    { title: 'id', field: 'id', hidden: true },\n    {\n      title: 'Username',\n      field: 'username',\n      lookup: { john_doe: 'john_doe', jane_doe: 'jane_doe' },\n    },\n    { title: 'Date', field: 'date', type: 'date' },\n  ]\n\n  const [GroceryListData, setGroceryListData] = useState([\n    { id: 1, username: 'john_doe', date: '12/2/2012' },\n    { id: 2, username: 'jane_doe', date: '9/9/1999' },\n  ])\n\n  var columns = [\n    // Primary key actually isn't a single id - need to consider this more\n    { title: 'id', field: 'id', hidden: true },\n    {\n      title: 'Ingredient',\n      field: 'name',\n      lookup: { Carrots: 'Carrots', Cilantro: 'Cilantro', Milk: 'Milk' },\n    },\n  ]\n\n  const [data, setData] = useState([\n    { id: 1, name: 'Carrots' },\n    { id: 2, name: 'Cilantro' },\n  ])\n\n  const handleRowAdd = (newData, resolve) => {\n    let dataToAdd = [...data]\n    dataToAdd.push(newData)\n    setData(dataToAdd)\n    resolve()\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    const dataUpdate = [...data]\n    const index = oldData.tableData.id\n    dataUpdate[index] = newData\n    setData([...dataUpdate])\n    resolve()\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    const dataDelete = [...data]\n    const index = oldData.tableData.id\n    dataDelete.splice(index, 1)\n    setData([...dataDelete])\n    resolve()\n  }\n\n  return (\n    <div>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <MaterialTable\n              title='Select a Grocery List'\n              columns={GroceryListColumns}\n              data={GroceryListData}\n              icons={tableIcons}\n              actions={[\n                {\n                  icon: '>',\n                  onClick: (event, rowData) => {\n                    // Get ingredients for other table based on chosen list\n                  },\n                },\n              ]}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <MaterialTable\n              title='Selected List'\n              columns={columns}\n              data={data}\n              icons={tableIcons}\n              editable={{\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve) => {\n                    handleRowUpdate(newData, oldData, resolve)\n                  }),\n                onRowAdd: (newData) =>\n                  new Promise((resolve) => {\n                    handleRowAdd(newData, resolve)\n                  }),\n                onRowDelete: (oldData) =>\n                  new Promise((resolve) => {\n                    handleRowDelete(oldData, resolve)\n                  }),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n","import './App.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport TestAPI from './components/TestAPI.js'\nimport Users from './components/Users'\nimport GroceryList from './components/GroceryList'\nimport Ingredients from './components/Ingredients'\nimport FoodGroups from './components/FoodGroups'\nimport User_Ingredients from './components/UserIngredients'\nimport GroceryList_Ingredients from './components/groceryListIngredient'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}))\n\nexport default function SimpleTabs() {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label='simple tabs example'\n        >\n          <Tab label='Users' {...a11yProps(0)} />\n          <Tab label='Grocery Lists' {...a11yProps(1)} />\n          <Tab label='Ingredients' {...a11yProps(2)} />\n          <Tab label='Food Groups' {...a11yProps(3)} />\n          <Tab label='User Ingredients' {...a11yProps(4)} />\n          <Tab label='Grocery-List Ingredients' {...a11yProps(5)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Users />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <GroceryList />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Ingredients />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <FoodGroups/>\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        <User_Ingredients />\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        <GroceryList_Ingredients />\n      </TabPanel>\n    </div>\n  )\n}\n\n// function About() {\n//   return <h2>About</h2>\n// }\n\n// function Users() {\n//   return <h2>Users</h2>\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}