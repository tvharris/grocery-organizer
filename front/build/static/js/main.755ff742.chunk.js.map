{"version":3,"sources":["components/Users.js","components/GroceryList.js","components/Ingredients.js","components/FoodGroups.js","components/UserSelector.js","components/UserIngredients.js","components/groceryListIngredient.js","App.js","reportWebVitals.js","index.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Users","useState","data","setData","useEffect","fetch","then","res","json","Container","maxWidth","title","columns","field","hidden","icons","editable","onRowUpdate","newData","oldData","Promise","resolve","method","headers","body","JSON","stringify","response","console","log","catch","error","dataUpdate","tableData","id","handleRowUpdate","onRowAdd","dataToAdd","push","handleRowAdd","onRowDelete","dataDelete","index","splice","handleRowDelete","GroceryList","type","Ingredients","setFoodGroups","lookup","Vegetable","Dairy","FoodGroups","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","users","selectedUser","setSelectedUser","classes","FormControl","className","InputLabel","Select","labelId","value","onChange","event","target","map","u","MenuItem","userID","username","UserIngredients","setUsers","GroceryListIngredient","GroceryListData","setGroceryListData","name","Grid","container","item","xs","actions","icon","onClick","rowData","Carrots","Cilantro","Milk","TabPanel","children","other","role","Box","p","Typography","a11yProps","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","React","setValue","AppBar","position","Tabs","newValue","Tab","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.755ff742.chunk.js","sourcesContent":["import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\nimport React, { useEffect } from 'react'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\n//postData('http://0.0.0.0:5000/users', {\n//method: 'POST',\n//headers: {\n//'Content-Type': 'application/json',\n//},\n//body: JSON.stringify(newData),\n//})\n\nexport default function Users() {\n\n    var columns = [\n        { title: 'id', field: 'id', hidden: true },\n        { title: 'Email', field: 'email' },\n        { title: 'Username', field: 'username' },\n    ]\n\n    const [data, setData] = useState([])\n\n    /*fetch users on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('http://0.0.0.0:5000/users')\n            .then(res => res.json())\n            .then(res =>\n                setData([...res])\n            )\n    }, [])\n\n    const handleRowAdd = (newData, resolve) => {\n        fetch('http://0.0.0.0:5000/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        fetch('http://0.0.0.0:5000/users', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        fetch('http://0.0.0.0:5000/users', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(oldData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n        <Container maxWidth='sm'>\n        <MaterialTable\n        title='Users'\n        columns={columns}\n        data={data}\n        icons={tableIcons}\n        editable={{\n            onRowUpdate: (newData, oldData) =>\n                new Promise((resolve) => {\n                    handleRowUpdate(newData, oldData, resolve)\n                }),\n                    onRowAdd: (newData) =>\n                new Promise((resolve) => {\n                    handleRowAdd(newData, resolve)\n                }),\n                    onRowDelete: (oldData) =>\n                new Promise((resolve) => {\n                    handleRowDelete(oldData, resolve)\n                }),\n        }}\n        />\n        </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function GroceryList() {\n    var columns = [\n        { title: 'id', field: 'listID', hidden: true },\n        { title: 'Username', field: 'username'},\n        { title: 'Date', field: 'listDate', type: 'date'},\n    ]\n\n    const [data, setData] = useState([])\n\n\n    /*fetch grocery_lists on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('http://0.0.0.0:5000/grocery_lists')\n            .then(res => res.json())\n            .then(res =>\n                setData([...res])\n            )\n    },[])\n\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Grocery Lists'\n                    columns={columns}\n                    data={data}\n                    icons={tableIcons}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                            handleRowUpdate(newData, oldData, resolve)\n                        }),\n                        onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                            handleRowAdd(newData, resolve)\n                        }),\n                        onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            handleRowDelete(oldData, resolve)\n                        }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\n\nexport default function Ingredients() {\n    var columns = [\n        { title: 'id', field: 'foodGroupID', hidden: true },\n        { title: 'Ingredient', field: 'name' },\n        {\n            title: 'Food Group',\n            field: 'FoodGroups.name',\n\n            // Will need to fix this to add dropdown working - format {foodGroupID: Name}\n            // Probably a case for state.\n\n            lookup: { Vegetable: 'Vegetable', Dairy: 'Dairy' },\n        },\n    ]\n\n\n    // get Foodgroups for adding\n    const [foodGroups, setFoodGroups] = useState([])\n\n    const [data, setData] = useState([])\n\n    /*fetch ingredients on load*/\n    useEffect(() => {\n        /*load the ingredients database info*/\n        fetch('http://0.0.0.0:5000/ingredients')\n            .then(res => res.json())\n            .then(res =>\n                setData([...res])\n            )\n    }, [])\n\n    const handleRowAdd = (newData, resolve) => {\n        /*fetch food groups for add*/\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setFoodGroups(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n        <Container maxWidth='sm'>\n        <MaterialTable\n        title='Ingredients'\n        columns={columns}\n        data={data}\n        icons={tableIcons}\n        editable={{\n            onRowUpdate: (newData, oldData) =>\n                new Promise((resolve) => {\n                    handleRowUpdate(newData, oldData, resolve)\n                }),\n                    onRowAdd: (newData) =>\n                new Promise((resolve) => {\n                    handleRowAdd(newData, resolve)\n                }),\n                    onRowDelete: (oldData) =>\n                new Promise((resolve) => {\n                    handleRowDelete(oldData, resolve)\n                }),\n        }}\n        />\n        </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function FoodGroups() {\n    var columns = [\n        { title: 'id', field: 'foodGroupID', hidden: true },\n        { title: 'Food Group', field: 'name' },\n    ]\n\n    const [data, setData] = useState([])\n\n    /*fetch users on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('http://0.0.0.0:5000/food_group')\n            .then(res => res.json())\n            .then(res =>\n                setData([...res])\n            )\n    }, [])\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Food Groups'\n                    columns={columns}\n                    data={data}\n                    icons={tableIcons}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                            handleRowUpdate(newData, oldData, resolve)\n                        }),\n                        onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                            handleRowAdd(newData, resolve)\n                        }),\n                        onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            handleRowDelete(oldData, resolve)\n                        }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function SimpleSelect({ users, selectedUser, setSelectedUser }) {\n\n    const classes = useStyles();\n    const handleChange = (event) => {\n        setSelectedUser(event.target.value);\n    };\n\n    return (\n        <div>\n        <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Select User</InputLabel>\n        <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedUser}\n        onChange={handleChange}\n        >\n        {users.map((u) => (<MenuItem value={u.userID}>{u.username}</MenuItem>))}\n        </Select>\n        </FormControl>\n        </div>\n    );\n}\n","import MaterialTable from 'material-table'\nimport { useState, useEffect } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport UserSelector from './UserSelector'\n\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function UserIngredients() {\n    var columns = [\n        { title: 'id', field: 'id', hidden: true },\n        {\n            title: 'Ingredient',\n            field: 'name',\n            //lookup: { Carrots: 'Carrots', Cilantro: 'Cilantro', Milk: 'Milk' },\n        },\n    ]\n\n\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n\n    // State for the Users\n    const [users, setUsers] = useState([]);\n\n    // State for Selector\n    const [selectedUser, setSelectedUser] = useState('')\n\n    // State for UserIngredients\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n\n        // Use GET request to maintain RESTfulness of API\n        fetch(`http://0.0.0.0:5000/user_ingredients/${selectedUser}`)\n            .then(response => response.json())\n            .then(data => {\n                setData([...data])\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n    }, [selectedUser])\n\n\n\n    /*fetch ingredients on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('http://0.0.0.0:5000/users')\n            .then(res => res.json())\n            .then(res =>\n                setUsers([...res])\n            )\n    }, [])\n\n\n    return (\n        <div>\n        <Container maxWidth='sm'>\n\n        {/* User Selector */}\n        <UserSelector\n        users={users}\n        setUsers={setUsers}\n        selectedUser={selectedUser}\n        setSelectedUser={setSelectedUser}\n        />\n\n        <br></br>\n\n        {/* Table Elements */}\n        <MaterialTable\n        title='User Ingredients'\n        columns={columns}\n        data={data}\n        icons={tableIcons}\n        editable={{\n            onRowUpdate: (newData, oldData) =>\n                new Promise((resolve) => {\n                    handleRowUpdate(newData, oldData, resolve)\n                }),\n                    onRowAdd: (newData) =>\n                new Promise((resolve) => {\n                    handleRowAdd(newData, resolve)\n                }),\n                    onRowDelete: (oldData) =>\n                new Promise((resolve) => {\n                    handleRowDelete(oldData, resolve)\n                }),\n        }}\n        />\n        </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState, useEffect } from 'react'\nimport { forwardRef } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nimport AddBox from '@material-ui/icons/AddBox'\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\nimport Check from '@material-ui/icons/Check'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport Clear from '@material-ui/icons/Clear'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport Edit from '@material-ui/icons/Edit'\nimport FilterList from '@material-ui/icons/FilterList'\nimport FirstPage from '@material-ui/icons/FirstPage'\nimport LastPage from '@material-ui/icons/LastPage'\nimport Remove from '@material-ui/icons/Remove'\nimport SaveAlt from '@material-ui/icons/SaveAlt'\nimport Search from '@material-ui/icons/Search'\nimport ViewColumn from '@material-ui/icons/ViewColumn'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nexport default function GroceryListIngredient() {\n    var GroceryListColumns = [\n        { title: 'id', field: 'listID', hidden: true },\n        {\n            title: 'Username',\n            field: 'username',\n            // lookup: { john_doe: 'john_doe', jane_doe: 'jane_doe' },\n        },\n        { title: 'Date', field: 'listDate', type: 'date' },\n    ]\n\n    const [GroceryListData, setGroceryListData] = useState([])\n\n    var columns = [\n        // Primary key actually isn't a single id - need to consider this more\n        { title: 'id', field: 'id', hidden: true },\n        {\n            title: 'Ingredient',\n            field: 'name',\n            lookup: { Carrots: 'Carrots', Cilantro: 'Cilantro', Milk: 'Milk' },\n        },\n    ]\n    /*fetch grocery_lists on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('http://0.0.0.0:5000/grocery_lists')\n            .then(res => res.json())\n            .then(res =>\n                setGroceryListData([...res])\n            )\n    }, [])\n\n    const [data, setData] = useState([\n        { id: 1, name: 'Carrots' },\n        { id: 2, name: 'Cilantro' },\n    ])\n\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container>\n                <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                        <MaterialTable\n                            title='Select a Grocery List'\n                            columns={GroceryListColumns}\n                            data={GroceryListData}\n                            icons={tableIcons}\n                            actions={[\n                                {\n                                    icon: '>',\n                                        onClick: (event, rowData) => {\n                                            // Get ingredients for other table based on chosen list\n                                        },\n                                },\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MaterialTable\n                            title='Selected List'\n                            columns={columns}\n                            data={data}\n                            icons={tableIcons}\n                            editable={{\n                                onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowUpdate(newData, oldData, resolve)\n                                }),\n                                onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData, resolve)\n                                }),\n                                onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve)\n                                }),\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n","import './App.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Users from './components/Users'\nimport GroceryList from './components/GroceryList'\nimport Ingredients from './components/Ingredients'\nimport FoodGroups from './components/FoodGroups'\nimport User_Ingredients from './components/UserIngredients'\nimport GroceryList_Ingredients from './components/groceryListIngredient'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}))\n\nexport default function SimpleTabs() {\n    const classes = useStyles()\n    const [value, setValue] = React.useState(0)\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position='static'>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    aria-label='simple tabs example'\n                >\n                    <Tab label='Users' {...a11yProps(0)} />\n                    <Tab label='Grocery Lists' {...a11yProps(1)} />\n                    <Tab label='Ingredients' {...a11yProps(2)} />\n                    <Tab label='Food Groups' {...a11yProps(3)} />\n                    <Tab label='User Ingredients' {...a11yProps(4)} />\n                    <Tab label='Grocery-List Ingredients' {...a11yProps(5)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <Users />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <GroceryList />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <Ingredients />\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n                <FoodGroups/>\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n                <User_Ingredients />\n            </TabPanel>\n            <TabPanel value={value} index={5}>\n                <GroceryList_Ingredients />\n            </TabPanel>\n        </div>\n    )\n}\n\n// function About() {\n//   return <h2>About</h2>\n// }\n\n// function Users() {\n//   return <h2>Users</h2>\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}