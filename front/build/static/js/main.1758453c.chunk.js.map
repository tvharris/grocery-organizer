{"version":3,"sources":["components/Users.js","components/GroceryList.js","components/Ingredients.js","components/FoodGroups.js","components/UserSelector.js","components/UserIngredients.js","components/groceryListIngredient.js","App.js","reportWebVitals.js","index.js"],"names":["Users","useState","data","setData","useEffect","fetch","then","res","json","Container","maxWidth","title","columns","field","hidden","editable","onRowUpdate","newData","oldData","Promise","resolve","method","headers","body","JSON","stringify","response","console","log","catch","error","dataUpdate","tableData","id","handleRowUpdate","onRowAdd","dataToAdd","push","handleRowAdd","onRowDelete","dataDelete","index","splice","handleRowDelete","GroceryList","userData","setUserData","lookup","type","arr","usernames","i","length","username","arrayToObject","Ingredients","ingredients","setIngredients","foodGroups","setFoodGroups","name","ingredientUpate","ingredientData","ingredientName","foodGroup","FoodGroups","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","users","selectedUser","setSelectedUser","classes","FormControl","className","InputLabel","Select","labelId","value","onChange","event","target","map","u","MenuItem","userID","UserIngredients","setUsers","class","style","textAlign","GroceryListIngredient","GroceryListData","setGroceryListData","marginBottom","Grid","container","item","xs","actions","icon","onClick","rowData","listID","loadUserGroceryList","TabPanel","props","children","other","role","Box","p","Typography","a11yProps","root","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","React","setValue","AppBar","position","Tabs","newValue","Tab","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1758453c.chunk.js","sourcesContent":["import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\n//postData('/users', {\n//method: 'POST',\n//headers: {\n//'Content-Type': 'application/json',\n//},\n//body: JSON.stringify(newData),\n//})\n\nexport default function Users() {\n\n    var columns = [\n        { title: 'id', field: 'id', hidden: true },\n        { title: 'Email', field: 'email' },\n        { title: 'Username', field: 'username' },\n    ]\n\n    const [data, setData] = useState([])\n\n    /*fetch users on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('/users')\n            .then(res => res.json())\n            .then(res =>\n                setData(res)\n            )\n    }, [])\n\n    const handleRowAdd = (newData, resolve) => {\n        fetch('/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        fetch('/users', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        fetch('/users', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(oldData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Users'\n                    columns={columns}\n                    data={data}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve) => {\n                                handleRowUpdate(newData, oldData, resolve)\n                            }),\n                        onRowAdd: (newData) =>\n                            new Promise((resolve) => {\n                                handleRowAdd(newData, resolve)\n                            }),\n                        onRowDelete: (oldData) =>\n                            new Promise((resolve) => {\n                                handleRowDelete(oldData, resolve)\n                            }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\nexport default function GroceryList() {\n    // data for the grocery list table\n    const [data, setData] = useState([])\n    // data for the username lookup (i.e., dropdown)\n    const [userData, setUserData] = useState({})\n\n    var columns = [\n        { title: 'id', field: 'listID', hidden: true },\n        { title: 'Username', field: 'username', lookup: userData },\n        // date is not editable because in the back-end we use the current datetime\n        { title: 'Date', field: 'listDate', type: 'date', editable: 'never' },\n    ]\n\n    // convert array of table rows to object for lookup - {username:username}\n    function arrayToObject(arr) {\n        let usernames = {}\n        for (let i = 0; i < arr.length; ++i)\n            usernames[arr[i].username] = arr[i].username\n        return usernames\n    }\n\n    // fetch grocery_lists and users on load\n    useEffect(() => {\n        // load the grocery list info\n        fetch('/grocery_lists')\n            .then((res) => res.json())\n            .then((res) => setData(res))\n        // load the user info for the lookup (i.e., dropdown)\n        fetch('/users')\n            .then((res) => res.json())\n            .then((res) => setUserData(arrayToObject(res)))\n    }, [])\n\n    const handleRowAdd = (newData, resolve) => {\n        fetch('/grocery_lists', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then((res) => res.json())\n            // res is the added row, use it to update state\n            .then((res) => setData([...data, ...res]))\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        fetch('/grocery_lists', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(oldData),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Grocery Lists'\n                    columns={columns}\n                    data={data}\n                    editable={{\n                       onRowAdd: (newData) =>\n                            new Promise((resolve) => {\n                                // let listDate = new Date().toISOString().slice(0, 19).replace('T', ' ');\n                                // newData['listDate'] = listDate\n                                handleRowAdd(newData, resolve)\n                            }),\n                        onRowDelete: (oldData) =>\n                            new Promise((resolve) => {\n                                handleRowDelete(oldData, resolve)\n                            }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\nexport default function Ingredients() {\n\n    //Initiate State\n    const [ingredients, setIngredients] = useState([])\n    const [foodGroups, setFoodGroups] = useState({})\n\n    var columns = [\n        { title: 'Ingredient', field: 'name' },\n        { title: 'id', field: 'ingredientID', hidden: true },\n        { title: 'Food Group', field: 'FoodGroups.name', lookup: foodGroups },\n    ]\n\n\n    // convert array of table rows to object for lookup - {foodGroupID:name}\n    function arrayToObject(arr) {\n        let foodGroups = {}\n        for (let i = 0; i < arr.length; ++i)\n            foodGroups[arr[i].name] = arr[i].name\n        return foodGroups\n    }\n\n    /*fetch ingredients on load*/\n    useEffect(() => {\n\n        /*load the user's database info*/\n        fetch('/ingredients')\n            .then(res => res.json())\n            .then(res => setIngredients(res))\n\n        //load the foodGroups\n        fetch('/food_group')\n            .then((res) => res.json())\n            .then((res) => setFoodGroups(arrayToObject(res)))\n        //.then(res => setFoodGroups([...res]))\n    }, [])\n\n    const handleRowAdd = (newData, resolve) => {\n        let ingredientData = { ingredientName: newData.name, foodGroup: newData.FoodGroups.name }\n        fetch('/ingredients', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(ingredientData),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        // update front-end state\n        let dataToAdd = [...ingredients]\n        dataToAdd.push(newData)\n        setIngredients(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        fetch('/ingredients', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then(data => data.json())\n            .then(data => {\n                console.log('Success:', data)\n                const ingredientUpate = [...ingredients]\n                const index = oldData.tableData.id\n                ingredientUpate[index] = newData\n                setIngredients([...ingredientUpate])\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        fetch('/ingredients', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(oldData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        const dataDelete = [...ingredients]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setIngredients([...dataDelete])\n        resolve()\n    }\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Ingredients'\n                    columns={columns}\n                    data={ingredients}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve) => {\n                                handleRowUpdate(newData, oldData, resolve)\n                            }),\n                        onRowAdd: (newData) =>\n                            new Promise((resolve) => {\n                                handleRowAdd(newData, resolve)\n                            }),\n                        onRowDelete: (oldData) =>\n                            new Promise((resolve) => {\n                                handleRowDelete(oldData, resolve)\n                            }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport React, { useEffect } from 'react'\n\nexport default function FoodGroups() {\n    var columns = [\n        { title: 'id', field: 'foodGroupID', hidden: true },\n        { title: 'Food Group', field: 'name' },\n    ]\n\n    const [data, setData] = useState([])\n\n    /*fetch users on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('/food_group')\n            .then(res => res.json())\n            .then(res =>\n                setData(res)\n            )\n    }, [])\n\n    const handleRowAdd = (newData, resolve) => {\n        fetch('/food_group', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        fetch('/food_group', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        fetch('/food_group', {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(oldData),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data)\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <MaterialTable\n                    title='Food Groups'\n                    columns={columns}\n                    data={data}\n                    editable={{\n                        onRowUpdate: (newData, oldData) =>\n                            new Promise((resolve) => {\n                                handleRowUpdate(newData, oldData, resolve)\n                            }),\n                        onRowAdd: (newData) =>\n                            new Promise((resolve) => {\n                                handleRowAdd(newData, resolve)\n                            }),\n                        onRowDelete: (oldData) =>\n                            new Promise((resolve) => {\n                                handleRowDelete(oldData, resolve)\n                            }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function SimpleSelect({ users, selectedUser, setSelectedUser }) {\n\n    const classes = useStyles();\n    const handleChange = (event) => {\n        setSelectedUser(event.target.value);\n    };\n\n    return (\n        <div>\n        <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Select User</InputLabel>\n        <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedUser}\n        onChange={handleChange}\n        >\n        {users.map((u) => (<MenuItem value={u.userID}>{u.username}</MenuItem>))}\n        </Select>\n        </FormControl>\n        </div>\n    );\n}\n","import MaterialTable from 'material-table'\nimport { useState, useEffect } from 'react'\nimport Container from '@material-ui/core/Container'\nimport UserSelector from './UserSelector'\n\nexport default function UserIngredients() {\n    var columns = [\n        { title: 'id', field: 'id', hidden: true },\n        {\n            title: 'Ingredient',\n            field: 'name',\n            //lookup: { Carrots: 'Carrots', Cilantro: 'Cilantro', Milk: 'Milk' },\n        },\n    ]\n\n    /*fetch user_ingredients on load*/\n    //useEffect(() => {\n    //[>load the user's database info<]\n    //fetch('/user_ingredients')\n    //.then(res => res.json())\n    //.then(res =>\n    //setData([...res])\n    //)\n    //console.log(data)\n    //})\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    // State for the Users\n    const [users, setUsers] = useState([])\n\n    // State for Selector\n    const [selectedUser, setSelectedUser] = useState('')\n\n    // State for UserIngredients\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        // Use GET request to maintain RESTfulness of API\n        fetch(`/user_ingredients/${selectedUser}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log('Success:', data)\n                setData([...data])\n            })\n            .catch((error) => {\n                console.log('Error:', error)\n            })\n    }, [selectedUser])\n\n    /*fetch ingredients on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('/users')\n            .then((res) => res.json())\n            .then((res) => setUsers(res))\n    }, [])\n\n    return (\n        <div>\n            <Container maxWidth='sm'>\n                <h6 class='MuiTypography-h6' style={{ margin: 0, textAlign: 'center' }}>\n                    Select a User to View Their Ingredients\n                </h6>\n\n                {/* User Selector */}\n                <UserSelector\n                    users={users}\n                    setUsers={setUsers}\n                    selectedUser={selectedUser}\n                    setSelectedUser={setSelectedUser}\n                />\n\n                <br></br>\n\n                {/* Table Elements */}\n                <MaterialTable\n                    title='User Ingredients'\n                    columns={columns}\n                    data={data}\n                    editable={{\n                        onRowAdd: (newData) =>\n                            new Promise((resolve) => {\n                                handleRowAdd(newData, resolve)\n                            }),\n                        onRowDelete: (oldData) =>\n                            new Promise((resolve) => {\n                                handleRowDelete(oldData, resolve)\n                            }),\n                    }}\n                />\n            </Container>\n        </div>\n    )\n}\n","import MaterialTable from 'material-table'\nimport { useState, useEffect } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nexport default function GroceryListIngredient() {\n    var GroceryListColumns = [\n        { title: 'id', field: 'listID', hidden: true },\n        {\n            title: 'Username',\n            field: 'username',\n            // lookup: { john_doe: 'john_doe', jane_doe: 'jane_doe' },\n        },\n        { title: 'Date', field: 'listDate', type: 'date' },\n    ]\n\n    const [GroceryListData, setGroceryListData] = useState([])\n\n    var columns = [\n        // Primary key actually isn't a single id - need to consider this more\n        { title: 'id', field: 'id', hidden: true },\n        {\n            title: 'Ingredient',\n            field: 'name',\n            //lookup: { Carrots: 'Carrots', Cilantro: 'Cilantro', Milk: 'Milk' },\n        },\n    ]\n    /*fetch grocery_lists on load*/\n    useEffect(() => {\n        /*load the user's database info*/\n        fetch('/grocery_lists')\n            .then((res) => res.json())\n            .then((res) => setGroceryListData(res))\n    }, [])\n\n    const [data, setData] = useState([])\n\n    const handleRowAdd = (newData, resolve) => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        const dataDelete = [...data]\n        const index = oldData.tableData.id\n        dataDelete.splice(index, 1)\n        setData([...dataDelete])\n        resolve()\n    }\n\n    const loadUserGroceryList = (rowData) => {\n        console.log(rowData.listID)\n        fetch(`/grocery_list_ingredients/${rowData.listID}`)\n            .then((res) => res.json())\n            .then((res) => setData([...res]))\n    }\n\n    return (\n        <div>\n            <Container>\n                <h6\n                    class='MuiTypography-h6'\n                    style={{\n                        marginTop: 0,\n                        marginBottom: '1.5rem',\n                        textAlign: 'center',\n                    }}\n                >\n                    Select a Grocery List to View Its Ingredients\n                </h6>\n                <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                        <MaterialTable\n                            title='Select a Grocery List'\n                            columns={GroceryListColumns}\n                            data={GroceryListData}\n                            actions={[\n                                {\n                                    icon: '>',\n                                    onClick: (event, rowData) => {\n                                        loadUserGroceryList(rowData)\n                                    },\n                                },\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MaterialTable\n                            title='Selected List'\n                            columns={columns}\n                            data={data}\n                            editable={{\n                                onRowAdd: (newData) =>\n                                    new Promise((resolve) => {\n                                        handleRowAdd(newData, resolve)\n                                    }),\n                                onRowDelete: (oldData) =>\n                                    new Promise((resolve) => {\n                                        handleRowDelete(oldData, resolve)\n                                    }),\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n","import './App.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Users from './components/Users'\nimport GroceryList from './components/GroceryList'\nimport Ingredients from './components/Ingredients'\nimport FoodGroups from './components/FoodGroups'\nimport User_Ingredients from './components/UserIngredients'\nimport GroceryList_Ingredients from './components/groceryListIngredient'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}))\n\nexport default function SimpleTabs() {\n    const classes = useStyles()\n    const [value, setValue] = React.useState(0)\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position='static'>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    aria-label='simple tabs example'\n                >\n                    <Tab label='Users' {...a11yProps(0)} />\n                    <Tab label='Grocery Lists' {...a11yProps(1)} />\n                    <Tab label='Ingredients' {...a11yProps(2)} />\n                    <Tab label='Food Groups' {...a11yProps(3)} />\n                    <Tab label='User Ingredients' {...a11yProps(4)} />\n                    <Tab label='Grocery-List Ingredients' {...a11yProps(5)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <Users />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <GroceryList />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <Ingredients />\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n                <FoodGroups/>\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n                <User_Ingredients />\n            </TabPanel>\n            <TabPanel value={value} index={5}>\n                <GroceryList_Ingredients />\n            </TabPanel>\n        </div>\n    )\n}\n\n// function About() {\n//   return <h2>About</h2>\n// }\n\n// function Users() {\n//   return <h2>Users</h2>\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}